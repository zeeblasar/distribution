# This is a basic workflow to help you get started with Actions

name: CI-CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    steps:
      - name: clone repository
        uses: actions/checkout@v2
        
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.2.0
        with:
          node-version: 14.x
     
      - name: Install dependencies
        run: |
          npm install
          
#       - name: test
#         run: |
#           npm run test    

      - name: Docker ECR
        uses: appleboy/docker-ecr-action@v0.0.3
        with: 
          access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          registry: ${{ secrets.REGISTRY }}
          repo: distribution
          region: us-west-2
          tags: 'latest'
          daemon_off:  false
          
          
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Download task definition
        run: |
          aws ecs describe-task-definition --task-definition distribution-task \
          --query taskDefinition > task-definition.json
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: distribution-container
          image: '${{ secrets.REGISTRY }}/distribution:latest'
          
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: distribution-service
          cluster: distribution-cluster
          wait-for-service-stability: true      
